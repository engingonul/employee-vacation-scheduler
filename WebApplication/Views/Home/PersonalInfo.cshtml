@using System.Text.RegularExpressions
@model IEnumerable<WebApplication.Employee>

@{
    Layout = "~/Views/Home/Shared/HomeLayout.cshtml";
}

@{
    ViewBag.Title = "PersonalInfo";
}

<div class="form-horizontal">
    <h4>Personal Information</h4>
    <hr />
    <table class="personal-info-table">

        @foreach (var item in Model)
        {
            if (Session["LoggedUserID"].ToString() == item.id.ToString())
            {
                int userId = Convert.ToInt32(Session["LoggedUserID"]);
                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>

                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.surname)
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.phoneNum)
                    </td>
                    <td>
                        @Html.HiddenFor(modelItem => item.phoneNum)
                        @Regex.Replace(item.phoneNum, @"(\d{4})(\d{3})(\d{4})", "($1)-$2-$3")
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.username)
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.password)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.password)
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.email)
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.startDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.startDate)
                    </td>
                </tr>


                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.role)
                    </td>
                    <td>
                        @Html.HiddenFor(modelItem => item.role)
                        @((bool)item.role ? "Yes" : "No")
                    </td>
                </tr>


                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.eligibleDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.eligibleDays)
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.DisplayNameFor(model => model.daysLeft)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.daysLeft)
                    </td>
                </tr>

                <tr  style="border: none">
                    <td colspan="2" style="border: none">
                        @Html.ActionLink("Edit", "Edit", new {id = item.id}, new { @class="btn-sm btn-default"})
                    </td>
                </tr>

            }
        }
    </table>
    <div id="back-link">
        @Html.ActionLink("Back", "Index")
    </div>
</div>

    <div>
        @Html.ValidationSummary(true)
    </div>
